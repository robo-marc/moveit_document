# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, National Institute of Advanced Industrial Science and
# Technology
# This file is distributed under the same license as the NEDO ROBO-MARC
# MoveIt! Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NEDO ROBO-MARC MoveIt! Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-22 14:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Yosuke Matsusaka <yosuke.matsusaka@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: /home/yosuke/moveit_document/source/moveit_commander.rst:2
msgid "Python用ユーザライブラリ（MoveIt Commander）の仕様"
msgstr ""

#: /home/yosuke/moveit_document/source/moveit_commander.rst
msgid "Public Functions"
msgstr "Public関数"

msgid ""
"Get the frame of reference in which planning is done (and environment\n"
"is maintained)"
msgstr "プランニングの実行に用いられる基準座標を取得する。"

msgid ""
"Get a MarkerArray of the markers that make up this robot\n"
"\n"
"Usage:\n"
"    (): get's all markers for current state\n"
"    state (RobotState): gets markers for a particular state\n"
"    values (dict): get markers with given values\n"
"    values, links (dict, list): get markers with given values and these "
"links\n"
"    group (string):  get all markers for a group\n"
"    group, values (string, dict): get all markers for a group with "
"desired values"
msgstr ""

msgid "Get the name of the root link of the robot model"
msgstr "ロボットモデルのルートリンク名を取得する。"

msgid ""
"Get the names of all the movable joints that make up a group\n"
"(mimic joints and fixed joints are excluded). If no group name is\n"
"specified, all joints in the robot model are returned, including\n"
"fixed and mimic joints."
msgstr ""
"グループ内のすべての駆動可能な関節名（mimic関節や固定関節を除く）を取得する。\n"
"グループ名が指定されなかった場合、ロボットモデル内すべての駆動可能な関節名（mimic関節や固定関節を含む）を取得する。"

msgid ""
"Get the links that make up a group. If no group name is specified,\n"
"all the links in the robot model are returned."
msgstr ""
"グループ内のすべてのリンク名を取得する。\n"
"グループ名が指定されなかった場合、ロボットモデル内すべてのリンク名を取得する。"

msgid "Get the names of the groups defined for the robot"
msgstr "ロボットモデルに定義されたすべてのグループ名を取得する。"

msgid "Get a RobotState message describing the current state of the robot"
msgstr "現在のロボットの状態（関節角など）をRobotStateメッセージ形式で取得する。"

msgid ""
"Get a dictionary mapping variable names to values.\n"
"Note that a joint may consist of one or more variables."
msgstr ""

msgid ""
"@param name str: Name of movegroup\n"
"@rtype: moveit_commander.robot.Joint\n"
"@raise exception: MoveItCommanderException"
msgstr ""

msgid ""
"@param name str: Name of movegroup\n"
"@rtype: moveit_commander.robot.Link\n"
"@raise exception: MoveItCommanderException"
msgstr ""

msgid ""
"@param name str: Name of movegroup\n"
"@rtype: moveit_commander.MoveGroupCommander"
msgstr ""

msgid ""
"@param name str: Name of movegroup\n"
"@rtype: bool"
msgstr ""

msgid ""
"Get the name of the smallest group (fewest joints) that includes\n"
"the joint name specified as argument."
msgstr ""

msgid ""
"We catch the names of groups, joints and links to allow easy access\n"
"to their properties."
msgstr ""

msgid ""
"@return number of the list that _Joint__get_joint_limits\n"
"        methods returns.\n"
"@see: "
"http://docs.ros.org/indigo/api/moveit_core/html/classmoveit_1_1core_1_1JointModel.html#details"
"\n"
"      for more about variable."
msgstr ""

msgid ""
"@return: Either a single list of min and max joint limits, or\n"
"         a set of those lists, depending on the number of variables\n"
"         available in this joint."
msgstr ""

msgid ""
"@return: Either a single min joint limit value, or\n"
"         a set of min values, depending on the number of variables\n"
"         available in this joint."
msgstr ""

msgid ""
"@return: Either a single max joint limit value, or\n"
"         a set of max values, depending on the number of variables\n"
"         available in this joint."
msgstr ""

msgid ""
"@rtype float\n"
"\n"
"(Editor's comment by @130s) I doubt there's a case where this method goes"
" into\n"
"\"else\" block, because get_current_joint_values always return a single "
"list.\n"
"\n"
"cf. getCurrentJointValues https://github.com/ros-"
"planning/moveit_ros/blob/8e819dda2b19462b8d0c5aacc69706c8a9d8d883/planning_interface/robot_interface/src/wrap_python_robot_interface.cpp#L176"
msgstr ""

msgid ""
"@param position [float]: List of joint angles to achieve.\n"
"@param wait bool: If false, the commands gets operated asynchronously."
msgstr ""

msgid "@rtype: geometry_msgs.Pose"
msgstr ""

msgid "Execution of simple commands for a particular group"
msgstr ""

msgid ""
"Specify the group name for which to construct this commander instance. "
"Throws an exception if there is an initialization error."
msgstr ""

msgid "Get the name of the group this instance was initialized for"
msgstr ""

msgid "Stop the current execution, if any"
msgstr ""

msgid "Get the active joints of this group"
msgstr ""

msgid "Get the joints of this group"
msgstr ""

msgid ""
"Return the number of variables used to parameterize a state in this group"
" (larger or equal to number of DOF)"
msgstr ""

msgid "Check if this group has a link that is considered to be an end effector"
msgstr ""

msgid ""
"Get the name of the link that is considered to be an end-effector. Return"
" an empty string if there is no end-effector."
msgstr ""

msgid "Set the name of the link to be considered as an end effector"
msgstr ""

msgid "Get the description of the planner interface (list of planner ids)"
msgstr ""

msgid "Get the reference frame assumed for poses of end-effectors"
msgstr ""

msgid "Set the reference frame to assume for poses of end-effectors"
msgstr ""

msgid "Get the name of the frame where all planning is performed"
msgstr ""

msgid ""
"Get the current configuration of the group as a list (these are values "
"published on /joint_states)"
msgstr ""

msgid ""
"Get the current pose of the end-effector of the group. Throws an "
"exception if there is not end-effector."
msgstr ""

msgid ""
"Get a list of 3 elements defining the [roll, pitch, yaw] of the end-"
"effector. Throws an exception if there is not end-effector."
msgstr ""

msgid ""
"Specify a start state for the group.\n"
"\n"
"Parameters\n"
"----------\n"
"msg : moveit_msgs/RobotState\n"
"\n"
"Examples\n"
"--------\n"
">>> from moveit_msgs.msg import RobotState\n"
">>> from sensor_msgs.msg import JointState\n"
">>> joint_state = JointState()\n"
">>> joint_state.header = Header()\n"
">>> joint_state.header.stamp = rospy.Time.now()\n"
">>> joint_state.name = ['joint_a', 'joint_b']\n"
">>> joint_state.position = [0.17, 0.34]\n"
">>> moveit_robot_state = RobotState()\n"
">>> moveit_robot_state.joint_state = joint_state\n"
">>> group.set_start_state(moveit_robot_state)"
msgstr ""

msgid ""
"Specify a target joint configuration for the group.\n"
"- if the type of arg1 is one of the following: dict, list, JointState "
"message, then no other arguments should be provided.\n"
"The dict should specify pairs of joint variable names and their target "
"values, the list should specify all the variable values\n"
"for the group. The JointState message specifies the positions of some "
"single-dof joints.\n"
"- if the type of arg1 is string, then arg2 is expected to be defined and "
"be either a real value or a list of real values. This is\n"
"interpreted as setting a particular joint to a particular value.\n"
"- if the type of arg1 is Pose or PoseStamped, both arg2 and arg3 could be"
" defined. If arg2 or arg3 are defined, their types must\n"
"be either string or bool. The string type argument is interpreted as the "
"end-effector the pose is specified for (default is to use\n"
"the default end-effector), and the bool is used to decide whether the "
"pose specified is approximate (default is false). This situation\n"
"allows setting the joint target of the group by calling IK. This does not"
" send a pose to the planner and the planner will do no IK.\n"
"Instead, one IK solution will be computed first, and that will be sent to"
" the planner."
msgstr ""

msgid ""
"Specify a target orientation for the end-effector. Any position of the "
"end-effector is acceptable."
msgstr ""

msgid ""
"Specify a target position for the end-effector. Any orientation of the "
"end-effector is acceptable."
msgstr ""

msgid ""
"Set the pose of the end-effector, if one is available. The expected input"
" is a Pose message, a PoseStamped message or a list of 6 floats:"
msgstr ""

msgid ""
"[x, y, z, rot_x, rot_y, rot_z] or a list of 7 floats [x, y, z, qx, qy, "
"qz, qw]"
msgstr ""

msgid ""
"Set the pose of the end-effector, if one is available. The expected input"
" is a list of poses. Each pose can be a Pose message, a list of 6 floats:"
" [x, y, z, rot_x, rot_y, rot_z] or a list of 7 floats [x, y, z, qx, qy, "
"qz, qw]"
msgstr ""

msgid ""
"Get the current pose of the end effector, add value to the corresponding "
"axis (0..5: X, Y, Z, R, P, Y) and set the new pose as the pose target"
msgstr ""

msgid "Clear the pose target for a particular end-effector"
msgstr ""

msgid "Clear all known pose targets"
msgstr ""

msgid "Set a random joint configuration target"
msgstr ""

msgid "Get a list of all the names of joint configurations."
msgstr ""

msgid ""
"Set a joint configuration by name. The name can be a name previlusy "
"remembered with remember_joint_values() or a configuration specified in "
"the SRDF."
msgstr ""

msgid "Get a dictionary of joint values of a named target"
msgstr ""

msgid ""
"Record the specified joint configuration of the group under the specified"
" name. If no values are specified, the current state of the group is "
"recorded."
msgstr ""

msgid "Get a dictionary that maps names to joint configurations for the group"
msgstr ""

msgid "Forget a stored joint configuration"
msgstr ""

msgid "Return a tuple of goal tolerances: joint, position and orientation."
msgstr ""

msgid ""
"Get the tolerance for achieving a joint goal (distance for each joint "
"variable)"
msgstr ""

msgid ""
"When moving to a position goal or to a pose goal, the tolerance for the "
"goal position is specified as the radius a sphere around the target "
"origin of the end-effector"
msgstr ""

msgid ""
"When moving to an orientation goal or to a pose goal, the tolerance for "
"the goal orientation is specified as the distance (roll, pitch, yaw) to "
"the target origin of the end-effector"
msgstr ""

msgid "Set the joint, position and orientation goal tolerances simultaneously"
msgstr ""

msgid "Set the tolerance for a target joint configuration"
msgstr ""

msgid "Set the tolerance for a target end-effector position"
msgstr ""

msgid "Set the tolerance for a target end-effector orientation"
msgstr ""

msgid "Enable/disable looking around for motion planning"
msgstr ""

msgid "Enable/disable replanning"
msgstr ""

msgid ""
"Get a list of names for the constraints specific for this group, as read "
"from the warehouse"
msgstr ""

msgid "Get the acutal path constraints in form of a moveit_msgs.msgs.Constraints"
msgstr ""

msgid "Specify the path constraints to be used (as read from the database)"
msgstr ""

msgid "Specify that no path constraints are to be used during motion planning"
msgstr ""

msgid ""
"Get the actual trajectory constraints in form of a "
"moveit_msgs.msgs.Constraints"
msgstr ""

msgid "Specify the trajectory constraints to be used"
msgstr ""

msgid ""
"Specify that no trajectory constraints are to be used during motion "
"planning"
msgstr ""

msgid "Specify which database to connect to for loading possible path constraints"
msgstr ""

msgid "Specify the amount of time to be used for motion planning."
msgstr ""

msgid "Specify which planner to use when motion planning"
msgstr ""

msgid "Get the current planner_id"
msgstr ""

msgid ""
"Set the number of times the motion plan is to be computed from scratch "
"before the shortest solution is returned. The default value is 1."
msgstr ""

msgid ""
"Set the workspace for the robot as either [], [minX, minY, maxX, maxY] or"
" [minX, minY, minZ, maxX, maxY, maxZ]"
msgstr ""

msgid ""
"Set a scaling factor for optionally reducing the maximum joint velocity. "
"Allowed values are in (0,1]."
msgstr ""

msgid ""
"Set a scaling factor for optionally reducing the maximum joint "
"acceleration. Allowed values are in (0,1]."
msgstr ""

msgid ""
"Set the target of the group and then move the group to the specified "
"target"
msgstr ""

msgid ""
"Return a motion plan (a RobotTrajectory) to the set goal state (or "
"specified by the joints argument)"
msgstr ""

msgid ""
"Compute a sequence of waypoints that make the end-effector move in "
"straight line segments that follow the poses specified as waypoints. "
"Configurations are computed for every eef_step meters; The jump_threshold"
" specifies the maximum distance in configuration space between "
"consecutive points in the resultingpath; Kinematic constraints for the "
"path given by path_constraints will be met for every point along the "
"trajectory, if they are not met, a partial solution will be returned. The"
" return value is a tuple: a fraction of how much of the path was "
"followed, the actual RobotTrajectory."
msgstr ""

msgid "Execute a previously planned path"
msgstr ""

msgid ""
"Given the name of an object existing in the planning scene, attach it to "
"a link. The link used is specified by the second argument. If left "
"unspecified, the end-effector link is used, if one is known. If there is "
"no end-effector link, the first link in the group is used. If no link is "
"identified, failure is reported. True is returned if an attach request "
"was succesfully sent to the move_group node. This does not verify that "
"the attach request also was successfuly applied by move_group."
msgstr ""

msgid ""
"Given the name of a link, detach the object(s) from that link. If no such"
" link exists, the name is interpreted as an object name. If there is no "
"name specified, an attempt is made to detach all objects attached to any "
"link in the group."
msgstr ""

msgid ""
"Pick the named object. A grasp message, or a list of Grasp messages can "
"also be specified as argument."
msgstr ""

msgid ""
"Place the named object at a particular location in the environment or "
"somewhere safe in the world if location is not provided"
msgstr ""

msgid "Set the support surface name for a place operation"
msgstr ""

msgid "Get the jacobian matrix of the group as a list"
msgstr ""

msgid "Simple interface to making updates to a planning scene"
msgstr ""

msgid ""
"Create a planning scene interface; it uses both C++ wrapped methods and "
"scene manipulation topics."
msgstr ""

msgid "Add a sphere to the planning scene"
msgstr ""

msgid "Add a cylinder to the planning scene"
msgstr ""

msgid "Add a mesh to the planning scene"
msgstr ""

msgid "Add a box to the planning scene"
msgstr ""

msgid "Add a plane to the planning scene"
msgstr ""

msgid "Remove an object from planning scene, or all if no name is provided"
msgstr ""

msgid ""
"Remove an attached object from planning scene, or all objects attached to"
" this link if no name is provided"
msgstr ""

msgid ""
"Get the names of all known objects in the world. If with_type is set to "
"true, only return objects that have a known type."
msgstr ""

msgid ""
"Get the names of known objects in the world that are located within a "
"bounding region (specified in the frame reported by\n"
"get_planning_frame()). If with_type is set to true, only return objects "
"that have a known type."
msgstr ""

msgid "Get the poses from the objects identified by the given object ids list."
msgstr ""

msgid ""
"Get the objects identified by the given object ids list. If no ids are "
"provided, return all the known objects."
msgstr ""

msgid ""
"Get the attached objects identified by the given object ids list. If no "
"ids are provided, return all the attached objects."
msgstr ""

